name: Titlematch 24/7

on:
  schedule:
    - cron: "*/10 * * * *"   # co 15 min (UTC)
  workflow_dispatch:

concurrency:
  group: titlematch-scan
  cancel-in-progress: false

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install praw pyyaml rapidfuzz requests
          fi

      - name: Create praw.ini from secrets
        run: |
          cat > praw.ini << 'EOF'
          [Cleanup_Bot]
          client_id=${{ secrets.REDDIT_CLIENT_ID }}
          client_secret=${{ secrets.REDDIT_CLIENT_SECRET }}
          username=${{ secrets.REDDIT_USERNAME }}
          password=${{ secrets.REDDIT_PASSWORD }}
          user_agent=Titlematch-Scanner/1.0 by u/${{ secrets.REDDIT_USERNAME }}
          EOF
          echo "praw.ini created (section: Cleanup_Bot)"

      - name: Ensure config.yaml exists
        run: |
          if [ ! -f config.yaml ]; then
            echo "::error::config.yaml not found in repo root."
            exit 1
          fi

      - name: Restore Titlematch state cache
        uses: actions/cache/restore@v4
        with:
          path: cache
          key: titlematch-state-
          restore-keys: |
            titlematch-state-

      - name: Ensure dirs
        run: mkdir -p cache logs

      - name: Run recent_scan_live.py (poster OFF)
        run: |
          python recent_scan_live.py \
            --window 60 \
            --sources both \
            --limit-per-source 200 \
            --poster never \
            --poster-pool top \
            --live \
            --commit \
            --inquiry-generic-only \
            --state-file "cache/state.json" \
            --state-ttl-min 180 \
            --log-jsonl "logs/decisions_$(date -u +%F).jsonl" \
          | tee titlematch_run.txt

      - name: Save Titlematch state cache
        uses: actions/cache/save@v4
        with:
          path: cache
          key: titlematch-state-${{ github.run_id }}

      - name: Upload artifacts (logs & run output)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: titlematch-logs-${{ github.run_id }}
          path: |
            titlematch_run.txt
            logs/decisions_*.jsonl
