name: Titlematch (live)

on:
  schedule:
    - cron: "*/15 * * * *"   # co 15 minut (GitHub może czasem odpalić ~20–30 min)
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: titlematch-live
  cancel-in-progress: true

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install praw==7.8.1 pyyaml rapidfuzz requests

      # Tworzymy praw.ini z sekcją Cleanup_Bot na podstawie sekretów
      - name: Write praw.ini
        env:
          PRAW_CLIENT_ID: ${{ secrets.PRAW_CLIENT_ID }}
          PRAW_CLIENT_SECRET: ${{ secrets.PRAW_CLIENT_SECRET }}
          PRAW_USERNAME: ${{ secrets.PRAW_USERNAME }}
          PRAW_PASSWORD: ${{ secrets.PRAW_PASSWORD }}
        run: |
          mkdir -p cache logs
          cat > praw.ini << 'EOF'
          [Cleanup_Bot]
          client_id=${PRAW_CLIENT_ID}
          client_secret=${PRAW_CLIENT_SECRET}
          username=${PRAW_USERNAME}
          password=${PRAW_PASSWORD}
          user_agent=Titlematch-Scanner/1.0 by u/${PRAW_USERNAME}
          EOF
          echo "praw.ini written"

      # GŁÓWNY SKANER – w trybie live (wykonuje remove + reason + message)
      - name: Run Titlematch (live)
        run: |
          python recent_scan_live.py \
            --config config.yaml \
            --subreddit CShortDramas \
            --sources both \
            --window 60 \
            --limit-per-source 200 \
            --state-file cache/state.json \
            --state-ttl-min 180 \
            --log-jsonl \
            --report-csv \
            --live \
            --execute live

      # Artefakty z logami (JSONL + CSV) do podglądu po jobie
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: titlematch-logs-${{ github.run_id }}
          path: |
            logs/**
            cache/state.json
          if-no-files-found: warn
